{"ast":null,"code":"var _jsxFileName = \"/home/kartik/Desktop/blogsite/client/src/pages/loginPage.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  const {\n    setUserInfo\n  } = useContext(User);\n  async function login(e) {\n    e.preventDefault();\n    const response = await fetch('http://localhost:4000/login', {\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: \"include\"\n    });\n    if (response.ok) {\n      response.json().then(userInfo => {});\n      setRedirect(true);\n    } else {\n      alert(\"Wrong Credentials\");\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login\",\n    onSubmit: login,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LogIn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"LA8c2h07KUkEE8TJL/zG+UM4GGk=\");\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useContext","useState","Navigate","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","redirect","setRedirect","setUserInfo","User","login","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","credentials","ok","json","then","userInfo","alert","to","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","children","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/kartik/Desktop/blogsite/client/src/pages/loginPage.js"],"sourcesContent":["import { useContext, useState } from \"react\"\nimport {Navigate}  from 'react-router-dom'\nexport default function LoginPage(){\n\n    const[username, setUsername] = useState('');\n    const[password, setPassword] = useState('');\n    const[redirect, setRedirect] = useState(false);\n    const {setUserInfo} = useContext(User)\n    async function login(e){\n        e.preventDefault();\n       const response =  await fetch('http://localhost:4000/login', {\n            method:\"POST\",\n            body: JSON.stringify({username, password}),\n            headers: {'Content-Type': 'application/json'},\n            credentials:\"include\"\n        });\n\n        if(response.ok){\n            response.json().then(userInfo=>{\n\n            })\n            setRedirect(true);\n        }else{\n            alert(\"Wrong Credentials\");\n        }\n    }\n\n    if(redirect){\n        return <Navigate  to =  {'/'} />\n    }\n\n    return (\n        <form className=\"login\" onSubmit={login}>\n            <h1>LogIn</h1>\n            <input type=\"text\" placeholder=\"username\" value={username} onChange={e=> setUsername(e.target.value)}></input>\n            <input type=\"password\" placeholder=\"password\" value={password} onChange={e=> setPassword(e.target.value)}></input>\n            <button>Login</button>\n        </form>\n    )\n}"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAAQC,QAAQ,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC1C,eAAe,SAASC,SAASA,CAAA,EAAE;EAAAC,EAAA;EAE/B,MAAK,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAK,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAK,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC9C,MAAM;IAACY;EAAW,CAAC,GAAGb,UAAU,CAACc,IAAI,CAAC;EACtC,eAAeC,KAAKA,CAACC,CAAC,EAAC;IACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;IACnB,MAAMC,QAAQ,GAAI,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MACxDC,MAAM,EAAC,MAAM;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAChB,QAAQ;QAAEE;MAAQ,CAAC,CAAC;MAC1Ce,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,WAAW,EAAC;IAChB,CAAC,CAAC;IAEF,IAAGP,QAAQ,CAACQ,EAAE,EAAC;MACXR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAE,CAE/B,CAAC,CAAC;MACFjB,WAAW,CAAC,IAAI,CAAC;IACrB,CAAC,MAAI;MACDkB,KAAK,CAAC,mBAAmB,CAAC;IAC9B;EACJ;EAEA,IAAGnB,QAAQ,EAAC;IACR,oBAAOP,OAAA,CAACF,QAAQ;MAAE6B,EAAE,EAAK;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;EAEA,oBACI/B,OAAA;IAAMgC,SAAS,EAAC,OAAO;IAACC,QAAQ,EAAEtB,KAAM;IAAAuB,QAAA,gBACpClC,OAAA;MAAAkC,QAAA,EAAI;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd/B,OAAA;MAAOmC,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,UAAU;MAACC,KAAK,EAAElC,QAAS;MAACmC,QAAQ,EAAE1B,CAAC,IAAGR,WAAW,CAACQ,CAAC,CAAC2B,MAAM,CAACF,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9G/B,OAAA;MAAOmC,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,UAAU;MAACC,KAAK,EAAEhC,QAAS;MAACiC,QAAQ,EAAE1B,CAAC,IAAGN,WAAW,CAACM,CAAC,CAAC2B,MAAM,CAACF,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClH/B,OAAA;MAAAkC,QAAA,EAAQ;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEf;AAAC7B,EAAA,CArCuBD,SAAS;AAAAuC,EAAA,GAATvC,SAAS;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}